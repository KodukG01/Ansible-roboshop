- name: Installing catalogue
  hosts: catalogue
  tasks:
    - name: Disabling catalogue
      ansible.builtin.command: dnf module disable nodejs -y

    - name: Enabling nodejs 20
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: Install nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: present

    - name: Creating app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Creating system user
      ansible.builtin.user:
        name: roboshop
        shell: /sbin/nologin
        system: true
        home: /app

    - name: Download catalogue code
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
        dest: /tmp/catalogue.zip

    - name: Unzip catalogue code file
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes

    - name: Install dependencies
      community.general.npm:
        path: /app
    
    - name: Copy catalogue.service file
      ansible.builtin.copy:
        src: catalogue.service
        dest: /etc/systemd/system/catalogue.service

    - name: Daemon reload
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: Start catalogue
      ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes

    - name: copy mondodb.repo
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: Install mongodb
      ansible.builtin.dnf:
        name: mongodb-mongosh
        state: present

    - name: check products
      ansible.builtin.command: mongosh --host mongodb.devsecops.fun --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
      register: catalogue_output

    - name: print catalogue output
      ansible.builtin.debug:
        msg: "{{ catalogue_output }}"

    - name: load products
      ansible.builtin.shell: mongosh --host mongodb.devsecops.fun < /app/db/master-data.js
        when: catalogue_output.stdout | int < 0


